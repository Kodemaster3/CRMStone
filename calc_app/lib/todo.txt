

implement:
1. model entities from domain in data layer               -is done!
2. add use case by logic with order and sub components    -in done!
3. repository must work by use case                       -is done!
4. add splash screen
5. create any like design for ui                          -in progress
6. add login screen after splash fireBase
7. add case translate => implement them



in entity:  add dateTime/                     +
            add size/                         +
            add description in component/     +
            add unit_linear/                  +
            add unit_weight in size           +
            add weight in component           +
            remove from component all units   +
            add unitWeight in order           +

in ui:      optimised layer


in data & case:
            implement material with isolation of orders             -in progress well
            implement choose all layer material in component!!!
            separate blocs case order, component, material


          !!  when material use in component, and material is deleted, need implement logic, this component when it reed,
            must give proposition to chose material from list
          !!  when create component and list material is empty, user see toast to create minimum one material

            implement ui material






run generator: flutter pub run build_runner build

